apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    useLibrary 'org.apache.http.legacy'
    publishNonDefault true

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        /**
         * ARouter 必须配置
         */
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            buildConfigField 'String','BaseUrl','"http://gank.io/api/"'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            buildConfigField 'String','BaseUrl','"http://gank.io/api/"'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}



dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    //support
    api (rootProject.ext.dependencies["support-v4"]){
        exclude module: 'support-annotations'
    }
    api (rootProject.ext.dependencies["appcompat-v7"]){
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }
    api (rootProject.ext.dependencies["cardview-v7"]){
        exclude module: 'support-annotations'
    }
    api (rootProject.ext.dependencies["design"]){
        exclude module: 'support-annotations'
    }
    api rootProject.ext.dependencies["annotations"]



    //view
    api (rootProject.ext.dependencies["autolayout"]) {
        exclude group: 'com.android.support'
    }
    api (rootProject.ext.dependencies["butterknife"]){
        exclude module: 'support-annotations'
    }
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]

    //Arouter
    api rootProject.ext.dependencies['arouter']
    annotationProcessor rootProject.ext.dependencies['arouter-compiler']


    //rx
    api rootProject.ext.dependencies["rxjava2"]
    api (rootProject.ext.dependencies["rxandroid2"]){
        exclude module: 'rxjava'
    }
    api (rootProject.ext.dependencies["rxcache2"]){
        exclude module: 'rxjava'
        exclude module: 'dagger'
    }
    api (rootProject.ext.dependencies["rxcache-jolyglot-gson"]){
        exclude module: 'gson'
    }
    api (rootProject.ext.dependencies["rxlifecycle2"]){
        exclude module: 'rxjava'
    }
    api (rootProject.ext.dependencies["rxlifecycle2-components"]){
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
    }
    api rootProject.ext.dependencies["rxpermissions2"]
    api (rootProject.ext.dependencies['rxerrorhandler2']){
        exclude module: 'rxjava'
    }


    //network
    api (rootProject.ext.dependencies["retrofit"]){
        exclude module: 'okhttp'
    }
    api (rootProject.ext.dependencies["retrofit-converter-gson"]){
        exclude module: 'gson'
    }
    api (rootProject.ext.dependencies["retrofit-adapter-rxjava2"]){
        exclude module: 'rxjava'
    }
    api rootProject.ext.dependencies["okhttp3"]
    api rootProject.ext.dependencies["glide"]

    //tools
    compileOnly rootProject.ext.dependencies["javax.annotation"]
    api rootProject.ext.dependencies["dagger2"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    api rootProject.ext.dependencies["androideventbus"]
    api rootProject.ext.dependencies["gson"]

    //test
    api rootProject.ext.dependencies["timber"]
    api rootProject.ext.dependencies["utils"]  //https://blankj.com/2016/07/31/android-utils-code/
    api rootProject.ext.dependencies["retrofit-logging"]
    testImplementation rootProject.ext.dependencies["junit"]
    api (rootProject.ext.dependencies["rxbinding"]){
        exclude module: 'support-annotations'
    }

    api rootProject.ext.dependencies['saripaar']

    api rootProject.ext.dependencies['rxgallery']

//    api rootProject.ext.dependencies['eventbus']

    api rootProject.ext.dependencies['RxBus']

    api rootProject.ext.dependencies['multidex']
}
